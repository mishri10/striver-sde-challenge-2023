// Brute force:
Apply heap sort to sort the array(can sort any array not just array having 0,1,2)
//T.C: O(NlogN)//S.C: O(1)
------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Optimal approach
//Intuition: Since in this case there are only 3 distinct values in the array so itâ€™s easy to maintain the count of all, 
Like the count of 0, 1, and 2. This can be followed by overwriting the array based on the frequency(count) of the values.


//T.C: O(2N)//S.C:O(1)
Code:

#include <bits/stdc++.h> 
void sort012(int *arr, int n)
{
   int count0=0,count1=0,count2=0;
   for(int i=0;i<n;i++){
      if(arr[i]==0)count0++;
      else if(arr[i]==1)count1++;
      else count2++;
   }

   for(int i=0;i<count0;i++)arr[i]=0;
   for(int j=count0;j<count0+count1;j++)arr[j]=1;
   for(int k=count0+count1;k<n;k++)arr[k]=2;
   
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
